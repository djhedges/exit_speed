#!/usr/bin/python3
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Converts a data log generated by exit speed to the new proto format."""
import os
import sys

from absl import app
from absl import flags
from absl import logging

from exit_speed import data_logger
from exit_speed import exit_speed_pb2
from exit_speed import tracks

FLAGS = flags.FLAGS
flags.DEFINE_string('old_data_path', None, 'Path to an old data file.')


def new_prefix(old_data_path, track, sensor_name):
  base_dir = old_data_path.strip('_1.data')
  return os.path.join(
      base_dir,
      track.name,
      sensor_name)


def main(unused_argv):
  flags.mark_flag_as_required('old_data_path')
  old_logger = data_logger.Logger(FLAGS.old_data_path)
  old_protos = old_logger.ReadProtos()
  track = tracks.FindClosestTrack({'lat': old_protos[0].lat,
                                   'lon': old_protos[0].lon})
  gps_logger = data_logger.Logger(
    new_prefix(FLAGS.old_data_path, track, 'GpsSensor'),
    proto_class=exit_speed_pb2.Gps)
  count = 0
  for old_point in old_protos:
    count += 1
    gps_proto = exit_speed_pb2.Gps(time=old_point.time,
                                   lat=old_point.lat,
                                   lon=old_point.lon,
                                   alt=old_point.alt,
                                   speed_ms=old_point.speed_ms)
    gps_logger.WriteProto(gps_proto)
    logging.log_every_n_seconds(logging.INFO, 'Written %d protos', 10, count)
    logging.log_every_n_seconds(logging.INFO, gps_proto, 30)
  logging.info('Final proto count %d', count)


if __name__ == '__main__':
  app.run(main)
