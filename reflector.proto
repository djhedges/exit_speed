// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Compile with:
// go install google.golang.org/grpc/cmd/protoc-gen-go-grpc
// LD_PRELOAD=/usr/lib/arm-linux-gnueabihf/libatomic.so.1 python3 -m grpc_tools.protoc -I ./ --go_out=./reflector_go_proto --go-grpc_out=./reflector_go_proto --go_opt=paths=source_relative --python_out ./ --grpc_python_out ./ reflector.proto
// Not sure why but something is still screwy with the grpc output path.
// Why not one more hack?
// mv reflector_go_proto/github.com/djhedges/exit_speed/reflector_go_proto/reflector_grpc.pb.go reflector_go_proto/

syntax = "proto3";

option go_package = "github.com/djhedges/exit_speed/reflector_go_proto";

import "gps.proto";
import "google/protobuf/duration.proto";

package reflector;

message PointUpdate {
  gps.Point point = 1;
  int32 lap_number = 2;
  int32 lap_id = 3;
  int32 session_id = 4;
  int32 elapsed_duration_ms = 5;
}

message LapNumber {
  int32 lap_number = 1;
};

message LapDuration {
  google.protobuf.Duration duration = 1;  // Time it took to finish the lap.
}

message Response {
}

service Reflect {
  rpc ExportPoint(PointUpdate) returns (Response) {}
  rpc NewLap(LapNumber) returns (Response) {}
  rpc UpdateLapDuration(LapDuration) returns (Response) {}
}
